version: "3"

services:
  rabbitmq:
    image: "rabbitmq:3.8-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: '/'

  discovery-service:
    build:
      context: ./discovery-service
    ports:
      - "8761:8761"

  api-gateway:
    build:
      context: ./api-gateway
    depends_on:
      - discovery-service
    ports:
      - "8989:8989"

  resource_postgres_db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB_1}
      POSTGRES_USER: ${POSTGRES_USER_1}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_1}
    volumes:
      - resource-postgres-data:/var/lib/postgresql/data

  song_postgres_db:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB_2}
      POSTGRES_USER: ${POSTGRES_USER_2}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_2}
    volumes:
      - song-postgres-data:/var/lib/postgresql/data

  storage_postgres_db:
    image: postgres:latest
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB_3}
      POSTGRES_USER: ${POSTGRES_USER_3}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_3}
    volumes:
      - storage-postgres-data:/var/lib/postgresql/data

  resource-service:
    build:
      context: ./resource-service
    depends_on:
      - resource_postgres_db
      - discovery-service
      - api-gateway
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL: ${RESOURCE_SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${RESOURCE_SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${RESOURCE_SPRING_DATASOURCE_PASSWORD}
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: ${EUREKA_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_DEFAULT_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_DEFAULT_PASS}
      RESOURCE_EXCHANGE_NAME: ${RESOURCE_EXCHANGE_NAME}
      RESOURCE_QUEUE_NAME: ${RESOURCE_QUEUE_NAME}
    ports:
      - "8081:8081"

  song-service:
    build:
      context: ./song-service
    depends_on:
      - song_postgres_db
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: ${SONG_SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SONG_SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SONG_SPRING_DATASOURCE_PASSWORD}
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: ${EUREKA_URL}
    ports:
      - "8082:8082"

  resource-processor:
    build:
      context: ./resource-processor
    depends_on:
      - rabbitmq
      - discovery-service
#      - resource-service
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_DEFAULT_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_DEFAULT_PASS}
      RESOURCE_EXCHANGE_NAME: ${RESOURCE_EXCHANGE_NAME}
      RESOURCE_QUEUE_NAME: ${RESOURCE_QUEUE_NAME}
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: ${EUREKA_URL}
    ports:
      - "8084:8084"

  storage-service:
    build:
      context: ./storage-service
    depends_on:
      - storage_postgres_db
    environment:
      SPRING_DATASOURCE_URL: ${STORAGE_SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${STORAGE_SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${STORAGE_SPRING_DATASOURCE_PASSWORD}

    ports:
      - "8085:8085"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  loki:
    image: grafana/loki:2.0.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"

  keycloak:
    image: jboss/keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - 9001:9001

volumes:
  resource-postgres-data:
  song-postgres-data:
  storage-postgres-data:
  loki:
